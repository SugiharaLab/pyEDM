
Python interface to C++ EDM (cppEDM) using pybind11.

To install the Python pyEDM package: python -m pip install pyEDM

To install a local pyEDM module: python -m pip install . --user

To build the wheel distribution: python setup.py sdist bdist_wheel

Notes:

To support the C++ extension based on cppEDM, Python setuptools is
used to build separate binary distributions for Linux, OSX and Windows.

The setuptools build on Linux/OSX requires position independent code:
libEDM.a must be compiled with -fPIC.

2022-01-21 : Note. We now use mingw in an Azure DevOps pipeline to
build Windows.  Notes below on MSVC are retained for information.

Windows is PITA. We use a prebuilt libopenblas.a (dll), which is of
course not optimized for specific arch.
Source: https://sourceforge.net/projects/openblas/

Build/system differences to support Windows MSVC.
------------------------------------------------------------------------
1) Must use MSVC x64 compiler to build EDM.lib from cppEDM.
2) MSVC nmake compatible makefile: makefile.windows
3) Common.h must #include <ciso646> since MSVC C keywords are not included.
4) std::slice_array operator [] does not export the symbols in MSVC.  An
   explicit type-cast is needed to placate the compiler (AuxFunc.cc).
5) On MSVC overloaded struct MultiviewValues constructors (Common.h)
   are not reasonably supported. 
